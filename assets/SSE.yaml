swagger: "2.0"
info:
  version: "1.0.0"
  title: "SSE Endpoints"

host: localhost:8080
# basePath:
schemes:
  - http

tags:
  - name: Product
    description: Product service endpoints
  - name: Order
    description: Order service endpoints
  - name: Location
    description: Location service endpoints
paths:
  /products/all:
    post:
      tags:
        - Product
      summary: "Show all products."
      description: "Shows all products."
      responses:
        200:
          description: "Successful response"
          examples:
            application/json: [
              {
                "product_name": "Product A",
                "description": "Description of Product A",
                "category": "cd",
                "brand": "A",
                "price": 50.00,
                "stock_quantity": 100,
                "supplier_id": ObjectId("5f90c393a380afd5cf0bdd1e"),
                "date_added": "ISODate('2023-01-01T08:00:00Z')"
              },
              {
                "product_name": "Product A II",
                "description": "Description of Product A II",
                "category": "Electronics",
                "brand": "B",
                "price": 21.00,
                "stock_quantity": 100,
                "supplier_id": ObjectId("5f90c393a380afd5cf0bdd1e"),
                "date_added": "ISODate('2023-01-01T08:00:00Z')"
              },
              {
                "product_name": "Product B",
                "description": "Description of Product V",
                "category": "Cd",
                "brand": "D",
                "price": 22.00,
                "stock_quantity": 32,
                "supplier_id": ObjectId("5f90c393a380afd5cf0bdd1e"),
                "date_added": "ISODate('2023-01-01T08:00:00Z')"
              }
            ]
        500:
          description: "Internal server error"

  /products/by-name:
    post:
      tags:
        - Product
      summary: "Show all products with product name."
      description: "Shows all products that contains requested name."
      parameters:
        - name: getProductsRequest
          in: body
          required: true
          schema:
            type: object
            required:
              - productName
            properties:
              productName:
                type: string
            example:
              productName: Product A
      responses:
        200:
          description: "Successful response"
          examples:
            application/json: [
              {
                "product_name": "Product A",
                "description": "Description of Product A",
                "category": "cd",
                "brand": "A",
                "price": 50.00,
                "stock_quantity": 100,
                "supplier_id": ObjectId("5f90c393a380afd5cf0bdd1e"),
                "date_added": "ISODate('2023-01-01T08:00:00Z')"
              },
              {
                "product_name": "Product A II",
                "description": "Description of Product A II",
                "category": "Electronics",
                "brand": "B",
                "price": 21.00,
                "stock_quantity": 100,
                "supplier_id": ObjectId("5f90c393a380afd5cf0bdd1e"),
                "date_added": "ISODate('2023-01-01T08:00:00Z')"
              }
            ]
        400:
          description: "Invalid request"
          examples:
            application/json:
              {
                "type": "about:blank",
                "title": "Bad Request",
                "status": 400,
                "detail": "Invalid request content.",
                "instance": "/orders"
              }
        500:
          description: "Internal server error"
  /orders:
    post:
      tags:
        - Order
      summary: "Place a new order"
      description: "Place a new order"
      parameters:
        - name: createOrderRequest
          in: body
          required: true
          schema:
            type: object
            required:
              - customerId
              - orderDate
              - shippingAddress
              - totalAmount
              - paymentMethod
              - orderStatus
              - scheduledDelivery
              - deliveredDate
              - discounts
              - taxAmount
              - notes
              - products
            properties:
              customerId:
                type: string
                example: "32049231jf80afd5cf0bdd1e"
              orderDate:
                type: string
                example: "2023-01-01T08:00:00Z"
              shippingAddress:
                type: string
                example: "123 Main St, Cityville"
              totalAmount:
                type: number
                example: 150.00
              paymentMethod:
                type: string
                example: "Credit Card"
              orderStatus:
                type: string
                example: "Pending"
              deliveredDate:
                type: string
                example: "2023-01-02T08:00:00Z"
              scheduledDelivery:
                type: string
                example: "2023-01-02T08:00:00Z"
              discounts:
                type: number
                example: 10.00
              taxAmount:
                type: number
                example: 8.50
              notes:
                type: string
                example: "Express shipping requested"
              products:
                type: array
                items:
                  example:
                    - productId: "5f90c393a380afd5cf0bdd1c"
                      productName: "Product A"
                      quantity: 2
                      unitPrice: 50.00
                    - productId: "5f90c393a380afd5cf0bdd1d"
                      productName: "Product B"
                      quantity: 1
                      unitPrice: 50.00
      responses:
        201:
          description: "Successful response"
        400:
          description: "Invalid request"
          examples:
            application/json:
              {
                "type": "about:blank",
                "title": "Bad Request",
                "status": 400,
                "detail": "Invalid request content.",
                "instance": "/orders"
              }
        500:
          description: "Internal server error"
  /ws://localhost:9090/dm/{dmId}:
    post:

      tags:
        - Location
      summary:  Websocket to location service - get/send dm location.
      description: /dm allows sending latest location to channel, the channel is dmId

      parameters:
        - name: dmId
          in: path
          required: true
          type: integer
        - name: message
          in: body
          required: false
          description: latest location of dm.  Content type - Text
          schema:
            type: string
            example: "40.640997, -74.010685"
      responses:
        200:
          description: "location"

  /ws://localhost:9090/{dmId}:
    post:
      parameters:
        - name: dmId
          in: path
          required: true
          type: integer
      tags:
        - Location
      summary: Websocket to location service - get dm location.
      description: Allows getting the latest location of dm with {dmId}, the channel is dmId; cannot send message
      responses:
        200:
          description: "location"
