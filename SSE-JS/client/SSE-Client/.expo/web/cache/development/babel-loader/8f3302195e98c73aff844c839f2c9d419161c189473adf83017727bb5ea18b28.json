{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createClientEnvironment = void 0;\nvar getenv_1 = require(\"getenv\");\nvar semver_1 = __importDefault(require(\"semver\"));\nvar webpack_1 = __importDefault(require(\"webpack\"));\nvar env_1 = require(\"../env\");\nvar defaults_1 = require(\"../env/defaults\");\nvar RESTRICTED_MANIFEST_FIELDS = ['facebookScheme', 'facebookAppId', 'facebookDisplayName', 'ios', 'android', 'plugins', 'hooks', '_internal', 'assetBundlePatterns'];\nfunction createEnvironmentConstants(appManifest) {\n  var _a;\n  var publicManifest = _objectSpread(_objectSpread({}, appManifest), {}, {\n    name: appManifest.displayName || appManifest.name,\n    web: {\n      config: (_a = appManifest.web) === null || _a === void 0 ? void 0 : _a.config\n    }\n  });\n  for (var field of RESTRICTED_MANIFEST_FIELDS) {\n    delete publicManifest[field];\n  }\n  return publicManifest;\n}\nfunction createClientEnvironment(mode, publicPath, nativeAppManifest, platform) {\n  var environment = (0, env_1.getMode)({\n    mode: mode\n  });\n  var __DEV__ = environment !== 'production';\n  var isEnvBindingSupported = lteSdkVersion(nativeAppManifest, '40.0.0');\n  var ENV_VAR_REGEX = isEnvBindingSupported ? /^(EXPO_|REACT_NATIVE_|CI$)/i : /^(CI$)/i;\n  var SECRET_REGEX = /(PASSWORD|SECRET|TOKEN)/i;\n  var shouldDefineKeys = (0, getenv_1.boolish)('EXPO_WEBPACK_DEFINE_ENVIRONMENT_AS_KEYS', false);\n  var prefix = shouldDefineKeys ? 'process.env.' : '';\n  var processEnv = Object.keys(process.env).filter(function (key) {\n    return ENV_VAR_REGEX.test(key) && !SECRET_REGEX.test(key);\n  }).reduce(function (env, key) {\n    env[`${prefix}${key}`] = JSON.stringify(process.env[key]);\n    return env;\n  }, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, `${prefix}NODE_ENV`, JSON.stringify(environment)), `${prefix}PUBLIC_URL`, JSON.stringify(publicPath)), `${prefix}APP_MANIFEST`, JSON.stringify(nativeAppManifest)), `${prefix}EXPO_DEBUG`, defaults_1.EXPO_DEBUG), `${prefix}PLATFORM`, JSON.stringify(platform)), `${prefix}WDS_SOCKET_PATH`, defaults_1.sockPath ? JSON.stringify(defaults_1.sockPath) : undefined));\n  if (shouldDefineKeys) {\n    return _objectSpread(_objectSpread({}, processEnv), {}, {\n      __DEV__: __DEV__\n    });\n  }\n  return {\n    'process.env': processEnv,\n    __DEV__: __DEV__\n  };\n}\nexports.createClientEnvironment = createClientEnvironment;\nvar DefinePlugin = function (_webpack_1$default$De) {\n  _inherits(DefinePlugin, _webpack_1$default$De);\n  var _super = _createSuper(DefinePlugin);\n  function DefinePlugin(_ref) {\n    var mode = _ref.mode,\n      publicUrl = _ref.publicUrl,\n      config = _ref.config,\n      platform = _ref.platform;\n    _classCallCheck(this, DefinePlugin);\n    var publicAppManifest = createEnvironmentConstants(config);\n    var environmentVariables = createClientEnvironment(mode, publicUrl, publicAppManifest, platform);\n    return _super.call(this, environmentVariables);\n  }\n  return _createClass(DefinePlugin);\n}(webpack_1.default.DefinePlugin);\nexports.default = DefinePlugin;\nDefinePlugin.createClientEnvironment = createClientEnvironment;\nDefinePlugin.fromEnv = function (env) {\n  var mode = (0, env_1.getMode)(env);\n  var _ref2 = (0, env_1.getPublicPaths)(env),\n    publicUrl = _ref2.publicUrl;\n  var config = env.config || (0, env_1.getConfig)(env);\n  return new DefinePlugin({\n    mode: mode,\n    publicUrl: publicUrl,\n    config: config,\n    platform: env.platform\n  });\n};\nfunction lteSdkVersion(exp, sdkVersion) {\n  if (!exp.sdkVersion) {\n    return false;\n  }\n  if (exp.sdkVersion === 'UNVERSIONED') {\n    return false;\n  }\n  try {\n    return semver_1.default.lte(exp.sdkVersion, sdkVersion);\n  } catch (_unused) {\n    return false;\n  }\n}","map":{"version":3,"names":["getenv_1","require","semver_1","__importDefault","webpack_1","env_1","defaults_1","RESTRICTED_MANIFEST_FIELDS","createEnvironmentConstants","appManifest","publicManifest","_objectSpread","name","displayName","web","config","_a","field","createClientEnvironment","mode","publicPath","nativeAppManifest","platform","environment","getMode","__DEV__","isEnvBindingSupported","lteSdkVersion","ENV_VAR_REGEX","SECRET_REGEX","shouldDefineKeys","boolish","prefix","processEnv","Object","keys","process","env","filter","key","test","reduce","JSON","stringify","_defineProperty","EXPO_DEBUG","sockPath","undefined","exports","DefinePlugin","_webpack_1$default$De","_inherits","_super","_createSuper","_ref","publicUrl","_classCallCheck","publicAppManifest","environmentVariables","call","_createClass","default","fromEnv","_ref2","getPublicPaths","getConfig","exp","sdkVersion","lte","_unused"],"sources":["/Users/kylexue/Desktop/SSE/SSE-JS/SSE-Client/node_modules/@expo/webpack-config/src/plugins/ExpoDefinePlugin.ts"],"sourcesContent":["import type { ExpoConfig } from 'expo/config';\nimport { boolish } from 'getenv';\nimport semver from 'semver';\nimport webpack from 'webpack';\n\nimport { getConfig, getMode, getPublicPaths } from '../env';\nimport { EXPO_DEBUG, sockPath } from '../env/defaults';\nimport { Environment, ExpoPlatform, Mode } from '../types';\n\nconst RESTRICTED_MANIFEST_FIELDS = [\n  // Omit app.json properties that get removed during the native build\n  'facebookScheme',\n  'facebookAppId',\n  'facebookDisplayName',\n  // Remove iOS and Android.\n  'ios',\n  'android',\n  // Hide internal / build values\n  'plugins',\n  'hooks',\n  '_internal',\n  // Remove metro-specific values\n  'assetBundlePatterns',\n];\n\nfunction createEnvironmentConstants(appManifest: ExpoConfig) {\n  const publicManifest: Record<string, any> = {\n    ...appManifest,\n    // @ts-ignore: displayName doesn't exist on ExpoConfig\n    name: appManifest.displayName || appManifest.name,\n    // Use the PWA `manifest.json` as the native web manifest.\n    web: {\n      // Pass through config properties that are not stored in the\n      // PWA `manifest.json`, but still need to be accessible\n      // through `Constants.manifest`.\n      config: appManifest.web?.config,\n    },\n  };\n\n  for (const field of RESTRICTED_MANIFEST_FIELDS) {\n    delete publicManifest[field];\n  }\n  return publicManifest;\n}\n\n/**\n * @internal\n */\nexport interface ClientEnv {\n  [key: string]: any;\n}\n\n/**\n * Create the global environment variables to surface in the project. Also creates the `__DEV__` boolean to provide better parity with Metro bundler.\n *\n * @param mode defines the Metro bundler `global.__DEV__` value.\n * @param publicPath passed as `process.env.PUBLIC_URL` to the app.\n * @param nativeAppManifest public values to be used in `expo-constants`.\n * @param platform native platform.\n * @internal\n */\nexport function createClientEnvironment(\n  mode: Mode,\n  publicPath: string,\n  nativeAppManifest: ExpoConfig,\n  platform: string\n): ClientEnv {\n  const environment = getMode({ mode });\n  const __DEV__ = environment !== 'production';\n\n  // Adding the env variables to the Expo manifest is unsafe.\n  // This feature is deprecated in SDK 41 forward.\n  const isEnvBindingSupported = lteSdkVersion(nativeAppManifest, '40.0.0');\n  const ENV_VAR_REGEX = isEnvBindingSupported ? /^(EXPO_|REACT_NATIVE_|CI$)/i : /^(CI$)/i;\n  const SECRET_REGEX = /(PASSWORD|SECRET|TOKEN)/i;\n\n  const shouldDefineKeys = boolish('EXPO_WEBPACK_DEFINE_ENVIRONMENT_AS_KEYS', false);\n\n  const prefix = shouldDefineKeys ? 'process.env.' : '';\n\n  const processEnv = Object.keys(process.env)\n    .filter(key => ENV_VAR_REGEX.test(key) && !SECRET_REGEX.test(key))\n    .reduce(\n      (env, key) => {\n        env[`${prefix}${key}`] = JSON.stringify(process.env[key]);\n        return env;\n      },\n      {\n        /**\n         * Useful for determining whether weâ€™re running in production mode.\n         * Most importantly, it switches React into the correct mode.\n         */\n        [`${prefix}NODE_ENV`]: JSON.stringify(environment),\n\n        /**\n         * Useful for resolving the correct path to static assets in `public`.\n         * For example, <img src={process.env.PUBLIC_URL + '/img/logo.png'} />.\n         * This should only be used as an escape hatch. Normally you would put\n         * images into the root folder and `import` them in code to get their paths.\n         */\n        [`${prefix}PUBLIC_URL`]: JSON.stringify(publicPath),\n\n        /**\n         * Surfaces the `app.json` (config) as an environment variable which is then parsed by\n         * `expo-constants` https://docs.expo.dev/versions/latest/sdk/constants/\n         */\n        [`${prefix}APP_MANIFEST`]: JSON.stringify(nativeAppManifest),\n\n        [`${prefix}EXPO_DEBUG`]: EXPO_DEBUG,\n        [`${prefix}PLATFORM`]: JSON.stringify(platform),\n        // [`${prefix}WDS_SOCKET_HOST`]: process.env.WDS_SOCKET_HOST,\n        // [`${prefix}WDS_SOCKET_PORT`]: process.env.WDS_SOCKET_PORT,\n        [`${prefix}WDS_SOCKET_PATH`]: sockPath ? JSON.stringify(sockPath) : undefined,\n      } as Record<string, string>\n    );\n\n  if (shouldDefineKeys) {\n    return {\n      ...processEnv,\n      __DEV__,\n    };\n  }\n\n  return {\n    'process.env': processEnv,\n    __DEV__,\n  };\n}\n\n/**\n * Required for `expo-constants` https://docs.expo.dev/versions/latest/sdk/constants/.\n * This surfaces the `app.json` (config) as an environment variable which is then parsed by `expo-constants`.\n * @category plugins\n */\nexport default class DefinePlugin extends webpack.DefinePlugin {\n  static createClientEnvironment = createClientEnvironment;\n  static fromEnv = (\n    env: Pick<Environment, 'projectRoot' | 'mode' | 'config' | 'locations' | 'platform'>\n  ): DefinePlugin => {\n    const mode = getMode(env);\n    const { publicUrl } = getPublicPaths(env);\n    const config = env.config || getConfig(env);\n    return new DefinePlugin({\n      mode,\n      publicUrl,\n      config,\n      platform: env.platform,\n    });\n  };\n\n  constructor({\n    mode,\n    publicUrl,\n    config,\n    platform,\n  }: {\n    mode: Mode;\n    publicUrl: string;\n    config: ExpoConfig;\n    platform: ExpoPlatform;\n  }) {\n    const publicAppManifest = createEnvironmentConstants(config);\n\n    const environmentVariables = createClientEnvironment(\n      mode,\n      publicUrl,\n      publicAppManifest as any,\n      platform\n    );\n\n    super(environmentVariables);\n  }\n}\n\nfunction lteSdkVersion(exp: Pick<ExpoConfig, 'sdkVersion'>, sdkVersion: string): boolean {\n  if (!exp.sdkVersion) {\n    return false;\n  }\n\n  if (exp.sdkVersion === 'UNVERSIONED') {\n    return false;\n  }\n\n  try {\n    return semver.lte(exp.sdkVersion, sdkVersion);\n  } catch {\n    return false;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}